#!/usr/bin/env ruby

$:<< File.expand_path("../../lib", __FILE__)
require 'mt/proxy'
require 'thor'
require 'json'
require 'net/http'


class CLI < Thor

  desc "status", "status of the proxy servers"
  method_option :redis, type: :string, default: 'redis://127.0.0.1:6379', desc: "redis server"

  def status
    db = redis
    status = {}
    %w[hosts no-vpn-hosts].each do |group|
      proxies = db.lrange group, 0, -1
      proxies.each_with_object(status) do |proxy,info|
        public_address = db.get("#{proxy}:goes_as")
        info[proxy] = {
          public_address: public_address,
          group: group
        }
      end
    end
    puts JSON.pretty_generate(status)

  end

  desc "console", "stars a shell"
  def console
    db = redis
    pry MT::Proxy
  end



  private

  def redis(reload=false)
    @redis = nil if reload
    @redis ||= begin
      MT::Proxy.redis= Redis.new(url: options[:redis])
      MT::Proxy.redis
    end
  end


end

CLI.start
